{"ast":null,"code":"var _jsxFileName = \"/Users/vishalmahanteshkodagali/Documents/RMIT/Sem 3/Full Stack Development/Assignment/Git_s3895036/loop-web-s3904406/react/admin/src/pages/MovieGraph.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { Bar } from 'react-chartjs-2';\nimport \"../Style/moviegraph.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GET_MOVIE_VIEWS = gql`\n  query GetMovieViews {\n    getMovieViews {\n      id\n      click_count\n      movie_id\n    }\n  }\n`;\nconst GET_MOVIES_QUERY = gql`\n  query GetMovies {\n    getMovies {\n      movie_id\n      movie_name\n    }\n  }\n`;\nexport default function MovieGraph() {\n  _s();\n\n  const {\n    loading: loadingViews,\n    error: errorViews,\n    data: dataViews\n  } = useQuery(GET_MOVIE_VIEWS);\n  const {\n    loading: loadingMovies,\n    error: errorMovies,\n    data: dataMovies\n  } = useQuery(GET_MOVIES_QUERY);\n  if (loadingViews || loadingMovies) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 47\n  }, this);\n  if (errorViews) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", errorViews.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 28\n  }, this);\n  if (errorMovies) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", errorMovies.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 29\n  }, this); // Create a mapping of movie_id to movie_name for easier lookup.\n\n  const movieNameMap = {};\n  dataMovies.getMovies.forEach(movie => {\n    movieNameMap[movie.movie_id] = movie.movie_name;\n  });\n  const movieNames = dataViews.getMovieViews.map(view => movieNameMap[view.movie_id]);\n  const viewCounts = dataViews.getMovieViews.map(view => view.click_count);\n  const chartData = {\n    labels: movieNames,\n    datasets: [{\n      label: 'Number of Views',\n      data: viewCounts,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      // You can customize this color\n      borderColor: 'rgba(75,192,192,1)',\n      // You can customize this color\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Bar-Grap-Views-per-movie\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Number of Views per Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(MovieGraph, \"IAujgoFO1awwTlZJoGiL3kU+VSU=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = MovieGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieGraph\");","map":{"version":3,"names":["React","useQuery","gql","Bar","GET_MOVIE_VIEWS","GET_MOVIES_QUERY","MovieGraph","loading","loadingViews","error","errorViews","data","dataViews","loadingMovies","errorMovies","dataMovies","message","movieNameMap","getMovies","forEach","movie","movie_id","movie_name","movieNames","getMovieViews","map","view","viewCounts","click_count","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth"],"sources":["/Users/vishalmahanteshkodagali/Documents/RMIT/Sem 3/Full Stack Development/Assignment/Git_s3895036/loop-web-s3904406/react/admin/src/pages/MovieGraph.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { Bar } from 'react-chartjs-2';\nimport \"../Style/moviegraph.css\"\n\nconst GET_MOVIE_VIEWS = gql`\n  query GetMovieViews {\n    getMovieViews {\n      id\n      click_count\n      movie_id\n    }\n  }\n`;\n\nconst GET_MOVIES_QUERY = gql`\n  query GetMovies {\n    getMovies {\n      movie_id\n      movie_name\n    }\n  }\n`;\n\nexport default function MovieGraph() {\n    const { loading: loadingViews, error: errorViews, data: dataViews } = useQuery(GET_MOVIE_VIEWS);\n    const { loading: loadingMovies, error: errorMovies, data: dataMovies } = useQuery(GET_MOVIES_QUERY);\n\n    if (loadingViews || loadingMovies) return <p>Loading...</p>;\n    if (errorViews) return <p>Error: {errorViews.message}</p>;\n    if (errorMovies) return <p>Error: {errorMovies.message}</p>;\n\n    // Create a mapping of movie_id to movie_name for easier lookup.\n    const movieNameMap = {};\n    dataMovies.getMovies.forEach(movie => {\n        movieNameMap[movie.movie_id] = movie.movie_name;\n    });\n\n    const movieNames = dataViews.getMovieViews.map(view => movieNameMap[view.movie_id]);\n    const viewCounts = dataViews.getMovieViews.map(view => view.click_count);\n\n    const chartData = {\n        labels: movieNames,\n        datasets: [\n            {\n                label: 'Number of Views',\n                data: viewCounts,\n                backgroundColor: 'rgba(75,192,192,0.4)',  // You can customize this color\n                borderColor: 'rgba(75,192,192,1)',  // You can customize this color\n                borderWidth: 1,\n            },\n        ],\n    };\n\n\n    return (\n        <>\n        <div className='Bar-Grap-Views-per-movie'>\n            <h3>Number of Views per Movie</h3>\n            <Bar data={chartData} />\n        </div>\n        </>\n    );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAO,yBAAP;;;AAEA,MAAMC,eAAe,GAAGF,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMG,gBAAgB,GAAGH,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,eAAe,SAASI,UAAT,GAAsB;EAAA;;EACjC,MAAM;IAAEC,OAAO,EAAEC,YAAX;IAAyBC,KAAK,EAAEC,UAAhC;IAA4CC,IAAI,EAAEC;EAAlD,IAAgEX,QAAQ,CAACG,eAAD,CAA9E;EACA,MAAM;IAAEG,OAAO,EAAEM,aAAX;IAA0BJ,KAAK,EAAEK,WAAjC;IAA8CH,IAAI,EAAEI;EAApD,IAAmEd,QAAQ,CAACI,gBAAD,CAAjF;EAEA,IAAIG,YAAY,IAAIK,aAApB,EAAmC,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EACnC,IAAIH,UAAJ,EAAgB,oBAAO;IAAA,sBAAWA,UAAU,CAACM,OAAtB;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;EAChB,IAAIF,WAAJ,EAAiB,oBAAO;IAAA,sBAAWA,WAAW,CAACE,OAAvB;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP,CANgB,CAQjC;;EACA,MAAMC,YAAY,GAAG,EAArB;EACAF,UAAU,CAACG,SAAX,CAAqBC,OAArB,CAA6BC,KAAK,IAAI;IAClCH,YAAY,CAACG,KAAK,CAACC,QAAP,CAAZ,GAA+BD,KAAK,CAACE,UAArC;EACH,CAFD;EAIA,MAAMC,UAAU,GAAGX,SAAS,CAACY,aAAV,CAAwBC,GAAxB,CAA4BC,IAAI,IAAIT,YAAY,CAACS,IAAI,CAACL,QAAN,CAAhD,CAAnB;EACA,MAAMM,UAAU,GAAGf,SAAS,CAACY,aAAV,CAAwBC,GAAxB,CAA4BC,IAAI,IAAIA,IAAI,CAACE,WAAzC,CAAnB;EAEA,MAAMC,SAAS,GAAG;IACdC,MAAM,EAAEP,UADM;IAEdQ,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,iBADX;MAEIrB,IAAI,EAAEgB,UAFV;MAGIM,eAAe,EAAE,sBAHrB;MAG8C;MAC1CC,WAAW,EAAE,oBAJjB;MAIwC;MACpCC,WAAW,EAAE;IALjB,CADM;EAFI,CAAlB;EAcA,oBACI;IAAA,uBACA;MAAK,SAAS,EAAC,0BAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,GAAD;QAAK,IAAI,EAAEN;MAAX;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADJ;AAQH;;GAvCuBvB,U;UACkDL,Q,EACGA,Q;;;KAFrDK,U"},"metadata":{},"sourceType":"module"}