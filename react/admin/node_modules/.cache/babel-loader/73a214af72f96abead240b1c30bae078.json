{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"react\";\nimport { getApolloContext } from \"../context/index.js\";\nexport function useApolloClient(override) {\n  var context = React.useContext(getApolloContext());\n  var client = override || context.client;\n  invariant(!!client, 47);\n  return client;\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,kCAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,OAAM,SAAUC,eAAV,CACJC,QADI,EAC2B;EAE/B,IAAMC,OAAO,GAAGJ,KAAK,CAACK,UAAN,CAAiBJ,gBAAgB,EAAjC,CAAhB;EACA,IAAMK,MAAM,GAAGH,QAAQ,IAAIC,OAAO,CAACE,MAAnC;EACAP,SAAS,CACP,CAAC,CAACO,MADK,EAEP,EAFO,CAAT;SAGIA","names":["invariant","React","getApolloContext","useApolloClient","override","context","useContext","client"],"sources":["/Users/vishalmahanteshkodagali/Documents/RMIT/Sem 3/Full Stack Development/Assignment/Git_s3895036/loop-web-s3904406/react/admin/node_modules/@apollo/src/react/hooks/useApolloClient.ts"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"react\";\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\n\nexport function useApolloClient(\n  override?: ApolloClient<object>\n): ApolloClient<object> {\n  const context = React.useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n      \"Wrap the root component in an <ApolloProvider>, or pass an ApolloClient \" +\n      \"instance in via options.\"\n  );\n\n  return client;\n}\n"]},"metadata":{},"sourceType":"module"}