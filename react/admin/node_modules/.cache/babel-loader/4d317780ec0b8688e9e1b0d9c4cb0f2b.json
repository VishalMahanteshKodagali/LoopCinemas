{"ast":null,"code":"export function createFulfilledPromise(value) {\n  var promise = Promise.resolve(value);\n  promise.status = \"fulfilled\";\n  promise.value = value;\n  return promise;\n}\nexport function createRejectedPromise(reason) {\n  var promise = Promise.reject(reason);\n  promise.catch(function () {});\n  promise.status = \"rejected\";\n  promise.reason = reason;\n  return promise;\n}\nexport function isStatefulPromise(promise) {\n  return \"status\" in promise;\n}\nexport function wrapPromiseWithState(promise) {\n  if (isStatefulPromise(promise)) {\n    return promise;\n  }\n\n  var pendingPromise = promise;\n  pendingPromise.status = \"pending\";\n  pendingPromise.then(function (value) {\n    if (pendingPromise.status === \"pending\") {\n      var fulfilledPromise = pendingPromise;\n      fulfilledPromise.status = \"fulfilled\";\n      fulfilledPromise.value = value;\n    }\n  }, function (reason) {\n    if (pendingPromise.status === \"pending\") {\n      var rejectedPromise = pendingPromise;\n      rejectedPromise.status = \"rejected\";\n      rejectedPromise.reason = reason;\n    }\n  });\n  return promise;\n}","map":{"version":3,"mappings":"AAmBA,OAAM,SAAUA,sBAAV,CAAyCC,KAAzC,EAAsD;EAC1D,IAAMC,OAAO,GAAGC,OAAO,CAACC,OAAR,CAAgBH,KAAhB,CAAhB;EAEAC,OAAO,CAACG,MAAR,GAAiB,WAAjB;EACAH,OAAO,CAACD,KAAR,GAAgBA,KAAhB;EAEA,OAAOC,OAAP;AACD;AAED,OAAM,SAAUI,qBAAV,CAAkDC,MAAlD,EAAiE;EACrE,IAAML,OAAO,GAAGC,OAAO,CAACK,MAAR,CAAeD,MAAf,CAAhB;EAGAL,OAAO,CAACO,KAAR,CAAc,aAAQ,CAAtB;EAEAP,OAAO,CAACG,MAAR,GAAiB,UAAjB;EACAH,OAAO,CAACK,MAAR,GAAiBA,MAAjB;EAEA,OAAOL,OAAP;AACD;AAED,OAAM,SAAUQ,iBAAV,CACJR,OADI,EACoB;EAExB,OAAO,YAAYA,OAAnB;AACD;AAED,OAAM,SAAUS,oBAAV,CACJT,OADI,EACoB;EAExB,IAAIQ,iBAAiB,CAACR,OAAD,CAArB,EAAgC;IAC9B,OAAOA,OAAP;EACD;;EAED,IAAMU,cAAc,GAAGV,OAAvB;EACAU,cAAc,CAACP,MAAf,GAAwB,SAAxB;EAEAO,cAAc,CAACC,IAAf,CACE,UAACZ,KAAD,EAAM;IACJ,IAAIW,cAAc,CAACP,MAAf,KAA0B,SAA9B,EAAyC;MACvC,IAAMS,gBAAgB,GACpBF,cADF;MAGAE,gBAAgB,CAACT,MAAjB,GAA0B,WAA1B;MACAS,gBAAgB,CAACb,KAAjB,GAAyBA,KAAzB;IACD;EACF,CATH,EAUE,UAACM,MAAD,EAAgB;IACd,IAAIK,cAAc,CAACP,MAAf,KAA0B,SAA9B,EAAyC;MACvC,IAAMU,eAAe,GACnBH,cADF;MAGAG,eAAe,CAACV,MAAhB,GAAyB,UAAzB;MACAU,eAAe,CAACR,MAAhB,GAAyBA,MAAzB;IACD;EACF,CAlBH;EAqBA,OAAOL,OAAP;AACD","names":["createFulfilledPromise","value","promise","Promise","resolve","status","createRejectedPromise","reason","reject","catch","isStatefulPromise","wrapPromiseWithState","pendingPromise","then","fulfilledPromise","rejectedPromise"],"sources":["/Users/vishalmahanteshkodagali/Documents/RMIT/Sem 3/Full Stack Development/Assignment/Git_s3895036/loop-web-s3904406/react/admin/node_modules/@apollo/src/utilities/promises/decoration.ts"],"sourcesContent":["export interface PendingPromise<TValue> extends Promise<TValue> {\n  status: \"pending\";\n}\n\nexport interface FulfilledPromise<TValue> extends Promise<TValue> {\n  status: \"fulfilled\";\n  value: TValue;\n}\n\nexport interface RejectedPromise<TValue> extends Promise<TValue> {\n  status: \"rejected\";\n  reason: unknown;\n}\n\nexport type PromiseWithState<TValue> =\n  | PendingPromise<TValue>\n  | FulfilledPromise<TValue>\n  | RejectedPromise<TValue>;\n\nexport function createFulfilledPromise<TValue>(value: TValue) {\n  const promise = Promise.resolve(value) as FulfilledPromise<TValue>;\n\n  promise.status = \"fulfilled\";\n  promise.value = value;\n\n  return promise;\n}\n\nexport function createRejectedPromise<TValue = unknown>(reason: unknown) {\n  const promise = Promise.reject(reason) as RejectedPromise<TValue>;\n\n  // prevent potential edge cases leaking unhandled error rejections\n  promise.catch(() => {});\n\n  promise.status = \"rejected\";\n  promise.reason = reason;\n\n  return promise;\n}\n\nexport function isStatefulPromise<TValue>(\n  promise: Promise<TValue>\n): promise is PromiseWithState<TValue> {\n  return \"status\" in promise;\n}\n\nexport function wrapPromiseWithState<TValue>(\n  promise: Promise<TValue>\n): PromiseWithState<TValue> {\n  if (isStatefulPromise(promise)) {\n    return promise;\n  }\n\n  const pendingPromise = promise as PendingPromise<TValue>;\n  pendingPromise.status = \"pending\";\n\n  pendingPromise.then(\n    (value) => {\n      if (pendingPromise.status === \"pending\") {\n        const fulfilledPromise =\n          pendingPromise as unknown as FulfilledPromise<TValue>;\n\n        fulfilledPromise.status = \"fulfilled\";\n        fulfilledPromise.value = value;\n      }\n    },\n    (reason: unknown) => {\n      if (pendingPromise.status === \"pending\") {\n        const rejectedPromise =\n          pendingPromise as unknown as RejectedPromise<TValue>;\n\n        rejectedPromise.status = \"rejected\";\n        rejectedPromise.reason = reason;\n      }\n    }\n  );\n\n  return promise as PromiseWithState<TValue>;\n}\n"]},"metadata":{},"sourceType":"module"}