{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from \"react\";\nimport { getApolloContext } from \"./ApolloContext.js\";\nexport var ApolloConsumer = function (props) {\n  var ApolloContext = getApolloContext();\n  return React.createElement(ApolloContext.Consumer, null, function (context) {\n    invariant(context && context.client, 42);\n    return props.children(context.client);\n  });\n};","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,kCAA1B;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,SAASC,gBAAT,QAAiC,oBAAjC;AAMA,OAAO,IAAMC,cAAc,GAAkC,UAACC,KAAD,EAAM;EACjE,IAAMC,aAAa,GAAGH,gBAAgB,EAAtC;EACA,OACED,oBAACI,aAAa,CAACC,QAAf,EAAuB,IAAvB,EACG,UAACC,OAAD,EAAa;IACZP,SAAS,CACPO,OAAO,IAAIA,OAAO,CAACC,MADZ,EAEP,EAFO,CAAT;WAGIJ;GALR,CADF;CAFK","names":["invariant","React","getApolloContext","ApolloConsumer","props","ApolloContext","Consumer","context","client"],"sources":["/Users/vishalmahanteshkodagali/Documents/RMIT/Sem 3/Full Stack Development/Assignment/Git_s3895036/loop-web-s3904406/react/admin/node_modules/@apollo/src/react/context/ApolloConsumer.tsx"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\n\nimport * as React from \"react\";\n\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { getApolloContext } from \"./ApolloContext.js\";\n\nexport interface ApolloConsumerProps {\n  children: (client: ApolloClient<object>) => React.ReactChild | null;\n}\n\nexport const ApolloConsumer: React.FC<ApolloConsumerProps> = (props) => {\n  const ApolloContext = getApolloContext();\n  return (\n    <ApolloContext.Consumer>\n      {(context: any) => {\n        invariant(\n          context && context.client,\n          'Could not find \"client\" in the context of ApolloConsumer. ' +\n            \"Wrap the root component in an <ApolloProvider>.\"\n        );\n        return props.children(context.client);\n      }}\n    </ApolloContext.Consumer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}