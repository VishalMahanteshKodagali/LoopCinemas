{"ast":null,"code":"import * as React from \"react\";\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\nexport function useReactiveVar(rv) {\n  return useSyncExternalStore(React.useCallback(function (update) {\n    return rv.onNextChange(function onNext() {\n      update();\n      rv.onNextChange(onNext);\n    });\n  }, [rv]), rv, rv);\n}","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,oBAAT,QAAqC,2BAArC;AAEA,OAAM,SAAUC,cAAV,CAA4BC,EAA5B,EAA8C;EAClD,OAAOF,oBAAoB,CACzBD,KAAK,CAACI,WAAN,CACE,UAACC,MAAD,EAAO;IAML,OAAOF,EAAE,CAACG,YAAH,CAAgB,SAASC,MAAT,GAAe;MACpCF,MAAM;MACNF,EAAE,CAACG,YAAH,CAAgBC,MAAhB;IACD,CAHM,CAAP;EAID,CAXH,EAYE,CAACJ,EAAD,CAZF,CADyB,EAezBA,EAfyB,EAgBzBA,EAhByB,CAA3B;AAkBD","names":["React","useSyncExternalStore","useReactiveVar","rv","useCallback","update","onNextChange","onNext"],"sources":["/Users/vishalmahanteshkodagali/Documents/RMIT/Sem 3/Full Stack Development/Assignment/Git_s3895036/loop-web-s3904406/react/admin/node_modules/@apollo/src/react/hooks/useReactiveVar.ts"],"sourcesContent":["import * as React from \"react\";\nimport type { ReactiveVar } from \"../../core/index.js\";\nimport { useSyncExternalStore } from \"./useSyncExternalStore.js\";\n\nexport function useReactiveVar<T>(rv: ReactiveVar<T>): T {\n  return useSyncExternalStore(\n    React.useCallback(\n      (update) => {\n        // By reusing the same onNext function in the nested call to\n        // rv.onNextChange(onNext), we can keep using the initial clean-up function\n        // returned by rv.onNextChange(function onNext(v){...}), without having to\n        // register the new clean-up function (returned by the nested\n        // rv.onNextChange(onNext)) with yet another callback.\n        return rv.onNextChange(function onNext() {\n          update();\n          rv.onNextChange(onNext);\n        });\n      },\n      [rv]\n    ),\n    rv,\n    rv\n  );\n}\n"]},"metadata":{},"sourceType":"module"}