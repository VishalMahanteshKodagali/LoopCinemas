{"ast":null,"code":"import axios from \"axios\";\nconst API_HOST = \"http://localhost:4000/api\";\nconst USERS_KEY = \"users\";\nconst USER_KEY = \"user\";\nconst MOVIE_REVIEWS = \"movieReviews\";\nconst movies = [{\n  title: \"Gran Turismo\",\n  sessionTime: \"10:00 AM, 2:00 PM\",\n  image: \"./gran_card.png\",\n  corouselImage: \"./gran.png\"\n}, {\n  title: \"Blue Beetle\",\n  sessionTime: \"11:00 AM, 3:00 PM\",\n  image: \"./blue_card.png\",\n  corouselImage: \"./blue.png\"\n}, {\n  title: \"Oppenheimer\",\n  sessionTime: \"12:00 PM, 4:00 PM\",\n  image: \"./oppenheimer_card.png\",\n  corouselImage: \"./oppenheimer.png\"\n}];\nconst movieRatings = [{\n  movieReviewId: 1,\n  movieTitle: \"Gran Turismo\",\n  rating: 4,\n  comments: \"Great movie, loved it!\",\n  userId: 1\n}, {\n  movieReviewId: 2,\n  movieTitle: \"Blue Beetle\",\n  rating: 1,\n  comments: \"One of the best movies I've seen!\",\n  userId: 1\n}, {\n  movieReviewId: 3,\n  movieTitle: \"Oppenheimer\",\n  rating: 5,\n  comments: \"One of the best movies I've seen!\",\n  userId: 1\n}]; // Check if data is already initialized before proceeding with initialization\n\nfunction initializeLocalStorage() {\n  if (!localStorage.getItem(USERS_KEY)) {\n    const users = [{\n      username: \"admin\",\n      password: \"admin\"\n    }];\n    localStorage.setItem(USERS_KEY, JSON.stringify(users));\n  }\n\n  if (!localStorage.getItem(MOVIE_REVIEWS)) {\n    // Assume movieRatings is already defined\n    localStorage.setItem(MOVIE_REVIEWS, JSON.stringify(movieRatings));\n  }\n\n  if (!localStorage.getItem('userReviewCount')) {// Assume movieRatings is already defined\n  }\n}\n\nasync function getUsers() {\n  try {\n    const response = await axios.get(`${API_HOST}/users`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching users\", error);\n    return [];\n  }\n}\n\nasync function verifyUser(username, password) {\n  // Define the URL for your API login endpoint\n  const apiUrl = `http://localhost:4000/api/users/login?username=${username}&password=${password}`;\n\n  try {\n    // Make a GET request to the login endpoint\n    const response = await axios.get(apiUrl);\n    console.log(apiUrl); // If the request is successful, set the user and return true\n\n    if (response.data && response.data.role === 'admin') {\n      setUser(response.data.username); // Assuming response.data contains the user data\n\n      console.log(response.data);\n      return true;\n    } else {\n      console.error('Admin only!');\n    }\n  } catch (error) {\n    // Log the error if the request failed\n    console.error('Error during authentication:', error);\n  } // Return false if the authentication failed\n\n\n  return false;\n}\n\nasync function setUser(username) {\n  try {\n    localStorage.setItem(USER_KEY, username);\n  } catch (error) {\n    // Log any error that occurs during the API call\n    console.error('Error setting user:', error);\n  }\n}\n\nfunction getUser() {\n  return localStorage.getItem(USER_KEY);\n}\n\nfunction removeUser() {\n  localStorage.removeItem(USER_KEY);\n}\n\nasync function saveUser(user) {\n  try {\n    const response = await axios.post(`${API_HOST}/users`, user);\n    setUser(user.username);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function updateUser(currentUsername, fields) {\n  try {\n    const response = await axios.put(`http://localhost:4000/api/users/${currentUsername}`, fields);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating user:', error);\n    throw error;\n  }\n}\n\nasync function deleteUser(username) {\n  try {\n    await axios.delete(`${API_HOST}/users/${username}`);\n    removeUser();\n    window.location.href = \"http://localhost:3003/login\";\n  } catch (error) {\n    console.error(\"Error deleting user\", error);\n  }\n}\n\nfunction getMovieReviews() {\n  const data = localStorage.getItem(MOVIE_REVIEWS); // Convert data to objects.\n\n  return JSON.parse(data);\n}\n\nfunction deleteMovieReviews(selectedReview) {\n  const reviews = getMovieReviews();\n\n  for (const r of reviews) {\n    if (r.userId === selectedReview.userId && r.movieTitle === selectedReview.movieTitle) {\n      var index = reviews.indexOf(r);\n\n      if (index !== -1) {\n        reviews.splice(index, 1);\n      }\n    }\n  }\n\n  localStorage.setItem(MOVIE_REVIEWS, JSON.stringify(reviews));\n}\n\nfunction editMovieRatings(selectedMoviewReview) {\n  //deleteMovieReviewbyId(selectedMoviewReview);\n  console.log(\"Before\", getMovieReviews());\n  const reviews = getMovieReviews().map(r => r.movieReviewId === selectedMoviewReview.movieReviewId ? selectedMoviewReview : r);\n  localStorage.setItem(MOVIE_REVIEWS, JSON.stringify(reviews));\n  console.log(\"After\", getMovieReviews());\n}\n\nfunction deleteMovieReviewbyId(selectedReview) {\n  const reviews = getMovieReviews();\n\n  for (const r of reviews) {\n    if (r.movieReviewId === selectedReview.movieReviewId) {\n      var index = reviews.indexOf(r);\n\n      if (index !== -1) {\n        reviews.splice(index, 1);\n      }\n    }\n  }\n\n  localStorage.setItem(MOVIE_REVIEWS, JSON.stringify(reviews));\n}\n\nfunction updateMovieRatings(rating) {\n  const movieReviews = getMovieReviews();\n  movieReviews.push(rating);\n  localStorage.setItem(MOVIE_REVIEWS, JSON.stringify(movieReviews));\n}\n\nasync function getLoggedInUserDetails() {\n  let tempUser = getUser();\n  const apiUrl = \"http://localhost:4000/api/users/\" + getUser();\n  const response = await axios.get(apiUrl);\n  return response.data;\n}\n\nfunction deleteUserMovieReviews(username) {\n  let reviews = getMovieReviews();\n  reviews = reviews.filter(review => review.userId !== username);\n  localStorage.setItem(MOVIE_REVIEWS, JSON.stringify(reviews));\n}\n\nexport { initializeLocalStorage, verifyUser, getUser, removeUser, saveUser, updateUser, deleteUser, getLoggedInUserDetails, movies, movieRatings, updateMovieRatings, getMovieReviews, deleteMovieReviews, deleteUserMovieReviews, deleteMovieReviewbyId, editMovieRatings };","map":{"version":3,"names":["axios","API_HOST","USERS_KEY","USER_KEY","MOVIE_REVIEWS","movies","title","sessionTime","image","corouselImage","movieRatings","movieReviewId","movieTitle","rating","comments","userId","initializeLocalStorage","localStorage","getItem","users","username","password","setItem","JSON","stringify","getUsers","response","get","data","error","console","verifyUser","apiUrl","log","role","setUser","getUser","removeUser","removeItem","saveUser","user","post","updateUser","currentUsername","fields","put","deleteUser","delete","window","location","href","getMovieReviews","parse","deleteMovieReviews","selectedReview","reviews","r","index","indexOf","splice","editMovieRatings","selectedMoviewReview","map","deleteMovieReviewbyId","updateMovieRatings","movieReviews","push","getLoggedInUserDetails","tempUser","deleteUserMovieReviews","filter","review"],"sources":["/Users/vishalmahanteshkodagali/Documents/RMIT/Sem 3/Full Stack Development/Assignment/Git_s3895036/loop-web-s3904406/react/admin/src/data/repository.js"],"sourcesContent":["import axios from \"axios\";\nconst API_HOST = \"http://localhost:4000/api\";\n\n\nconst USERS_KEY = \"users\";\nconst USER_KEY = \"user\";\nconst MOVIE_REVIEWS = \"movieReviews\";\n\nconst movies = [\n  { title: \"Gran Turismo\", sessionTime: \"10:00 AM, 2:00 PM\" , image:\"./gran_card.png\", corouselImage:\"./gran.png\"},\n  { title: \"Blue Beetle\", sessionTime: \"11:00 AM, 3:00 PM\" ,image:\"./blue_card.png\", corouselImage:\"./blue.png\" },\n  { title: \"Oppenheimer\", sessionTime: \"12:00 PM, 4:00 PM\" ,image:\"./oppenheimer_card.png\", corouselImage:\"./oppenheimer.png\" },\n]\nconst movieRatings = [\n  {\n    movieReviewId: 1,\n    movieTitle: \"Gran Turismo\",\n    rating: 4,\n    comments: \"Great movie, loved it!\",\n    userId: 1,\n  },\n  {\n    movieReviewId: 2,\n    movieTitle: \"Blue Beetle\",\n    rating: 1,\n    comments: \"One of the best movies I've seen!\",\n    userId: 1,\n  },\n  {\n    movieReviewId: 3,\n    movieTitle: \"Oppenheimer\",\n    rating: 5,\n    comments: \"One of the best movies I've seen!\",\n    userId: 1,\n  },\n]\n// Check if data is already initialized before proceeding with initialization\nfunction initializeLocalStorage() {\n  if (!localStorage.getItem(USERS_KEY)) {\n    const users = [\n      {\n        username: \"admin\",\n        password: \"admin\"\n      }\n    ];\n    localStorage.setItem(USERS_KEY, JSON.stringify(users));\n  }\n\n  if (!localStorage.getItem(MOVIE_REVIEWS)) {\n    // Assume movieRatings is already defined\n    localStorage.setItem(MOVIE_REVIEWS, JSON.stringify(movieRatings));\n  }\n  if (!localStorage.getItem('userReviewCount')) {\n    // Assume movieRatings is already defined\n  }\n  \n}\n\n\nasync function getUsers() {\n  try {\n    const response = await axios.get(`${API_HOST}/users`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching users\", error);\n    return [];\n  }\n}\n\nasync function verifyUser(username, password) {\n  // Define the URL for your API login endpoint\n  const apiUrl = `http://localhost:4000/api/users/login?username=${username}&password=${password}`;\n  \n  try {\n    // Make a GET request to the login endpoint\n    const response = await axios.get(apiUrl);\n    \n    console.log(apiUrl);\n    // If the request is successful, set the user and return true\n    if (response.data && response.data.role === 'admin' ) {\n      setUser(response.data.username); // Assuming response.data contains the user data\n      console.log(response.data)\n      return true;\n    }else {\n      console.error('Admin only!');\n    }\n    \n  } catch (error) {\n    // Log the error if the request failed\n    console.error('Error during authentication:', error);\n  }\n  // Return false if the authentication failed\n  return false;\n}\n\n\nasync function setUser(username) {\n  try {\n    localStorage.setItem(USER_KEY, username);\n  } catch (error) {\n    // Log any error that occurs during the API call\n    console.error('Error setting user:', error);\n  }\n}\n\nfunction getUser() {\n  return localStorage.getItem(USER_KEY);\n}\n\nfunction removeUser() {\n  localStorage.removeItem(USER_KEY);\n}\n\nasync function saveUser(user) {\n  try {\n    const response = await axios.post(`${API_HOST}/users`, user);\n    setUser(user.username);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function updateUser(currentUsername, fields) {\n  try {\n    const response = await axios.put(`http://localhost:4000/api/users/${currentUsername}`, fields);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating user:', error);\n    throw error;\n  }\n}\n\nasync function deleteUser(username) {\n  try {\n    await axios.delete(`${API_HOST}/users/${username}`);\n    removeUser();\n    window.location.href = \"http://localhost:3003/login\";\n  } catch (error) {\n    console.error(\"Error deleting user\", error);\n  }\n}\n\n\nfunction getMovieReviews(){\n  const data = localStorage.getItem(MOVIE_REVIEWS);\n  // Convert data to objects.\n  return JSON.parse(data);\n}\n\n\nfunction deleteMovieReviews(selectedReview){\n  \n\n  const reviews = getMovieReviews();\n  for(const r of reviews) {\n    if(r.userId === selectedReview.userId && r.movieTitle === selectedReview.movieTitle)\n    {\n      var index = reviews.indexOf(r);\n      if (index !== -1) {\n        reviews.splice(index, 1);\n}\n    }\n  }\n\n  localStorage.setItem(MOVIE_REVIEWS, JSON.stringify(reviews));\n  \n}\nfunction editMovieRatings(selectedMoviewReview) {\n  //deleteMovieReviewbyId(selectedMoviewReview);\n  console.log(\"Before\",getMovieReviews())\n  const reviews = getMovieReviews().map((r) =>\n    r.movieReviewId === selectedMoviewReview.movieReviewId\n      ? selectedMoviewReview\n      : r\n  );\n\n  localStorage.setItem(MOVIE_REVIEWS, JSON.stringify(reviews));\n  console.log(\"After\",getMovieReviews())\n\n}\n\nfunction deleteMovieReviewbyId(selectedReview){\n  \n  const reviews = getMovieReviews();\n  for(const r of reviews) {\n      if(r.movieReviewId === selectedReview.movieReviewId)\n      {\n        var index = reviews.indexOf(r);\n        if (index !== -1) {\n          reviews.splice(index, 1);\n      }\n    }\n  }\n\n  localStorage.setItem(MOVIE_REVIEWS, JSON.stringify(reviews));\n  \n}\nfunction updateMovieRatings(rating){\n  const movieReviews = getMovieReviews();\n  movieReviews.push(rating);\n  localStorage.setItem(MOVIE_REVIEWS, JSON.stringify(movieReviews));\n \n}\n\n\nasync function getLoggedInUserDetails(){\n  let tempUser = getUser();\n  const apiUrl = \"http://localhost:4000/api/users/\"+getUser();\n  const response = await axios.get(apiUrl);\n  return response.data;\n}\n\n\n\nfunction deleteUserMovieReviews(username){\n  let reviews = getMovieReviews();\n  reviews = reviews.filter(review=> review.userId !== username);\n  localStorage.setItem(MOVIE_REVIEWS, JSON.stringify(reviews));\n\n}\n\nexport {\n  initializeLocalStorage,\n  verifyUser,\n  getUser,\n  removeUser,\n  saveUser,\n  updateUser,\n  deleteUser,\n  getLoggedInUserDetails,\n  movies,\n  movieRatings,\n  updateMovieRatings,\n  getMovieReviews,\n  deleteMovieReviews,\n  deleteUserMovieReviews,\n  deleteMovieReviewbyId,\n  editMovieRatings\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}