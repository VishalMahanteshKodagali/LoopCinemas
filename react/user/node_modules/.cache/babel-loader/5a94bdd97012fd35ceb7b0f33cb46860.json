{"ast":null,"code":"var _jsxFileName = \"/Users/vishalmahanteshkodagali/Documents/RMIT/Sem 3/Full Stack Development/Assignment/Git_s3895036/loop-web-s3904406/react/user/src/components/UpcomingMovies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MovieItem from \"./MovieItem\";\nimport { movies, getMovieReviews, updateMovieRatings, getLoggedInUserDetails, getUser, getMovies } from \"../data/repository\";\nimport Review from \"./Review\";\nimport { Carousel } from \"react-bootstrap\";\nimport '../Style/UpcomingMovies.css';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\"; // Import Axios\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_HOST = \"http://localhost:4000/api\";\n\nconst UpcomingMovies = () => {\n  _s();\n\n  const navigate = useNavigate();\n\n  const handleBookTicket = async movie => {\n    await axios.post(`${API_HOST}/moviesClickCount/movie/` + movie.movie_id); // Replace with the actual endpoint URL\n\n    navigate(\"/booking\", {\n      state: {\n        movie\n      }\n    });\n  }; // Hardcoded data for upcoming movies and session times\n\n\n  const [upcomingMovies, setMovies] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [showReview, setShowReview] = useState(false);\n  const [selectedMovie, setSelectedMovie] = useState(null); // Function to fetch movie reviews using Axios\n\n  const fetchMovieReviews = async () => {\n    try {\n      const response = await axios.get(`${API_HOST}/reviews`); // Replace with the actual endpoint URL\n\n      console.log(response.data);\n      setReviews(response.data); // Assuming the data is in response.data\n    } catch (error) {\n      console.error(\"Error fetching movie reviews:\", error);\n    }\n  }; // Function to fetch movie reviews using Axios\n\n\n  const fetchMovies = async () => {\n    try {\n      const response = await axios.get(`${API_HOST}/movies`); // Replace with the actual endpoint URL\n\n      console.log(response.data);\n      setMovies(response.data); // Assuming the data is in response.data\n    } catch (error) {\n      console.error(\"Error fetching movie reviews:\", error);\n    }\n  }; // Fetch movie reviews when the component mounts\n\n\n  useEffect(() => {\n    fetchMovies();\n    fetchMovieReviews();\n  }, []);\n\n  const handleLeaveReview = movieTitle => {\n    const userId = getUser.userId;\n    setSelectedMovie(movieTitle);\n    setShowReview(true);\n  };\n\n  const handleCloseReview = () => {\n    setShowReview(false);\n    setSelectedMovie(null);\n  };\n\n  const handleSubmitReview = async (movieTitle, rating, comments) => {\n    // Store the updated review count in local storage\n    const username = getUser(); // Save the review data to a localStorage.\n\n    const movieReview = {\n      movie_id: movieTitle,\n      review_rating: rating,\n      review_description: comments,\n      username: username\n    };\n    updateMovieRatings(movieReview);\n    await fetchMovies();\n    await fetchMovieReviews();\n  }; // Calculate average rating for each movie\n\n\n  const averageRatings = upcomingMovies.reduce((acc, movie) => {\n    const movieRatings = reviews.filter(rating => rating.movie.movie_name === movie.movie_name);\n\n    if (movieRatings.length > 0) {\n      const totalRating = movieRatings.reduce((sum, rating) => sum + rating.review_rating, 0);\n      acc[movie.movie_name] = totalRating / movieRatings.length;\n    } else {\n      acc[movie.movie_name] = 0;\n    }\n\n    return acc;\n  }, {}); // Sort movies based on average ratings (from highest to lowest)\n\n  upcomingMovies.sort((a, b) => averageRatings[b.movie_name] - averageRatings[a.movie_name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upcoming-movies\",\n    style: {\n      flex: 1,\n      overflow: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Carousel, {\n      children: upcomingMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.corouselImage,\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Carousel.Caption, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: movie.movie_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: movie.sessionTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: upcomingMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(MovieItem, {\n          title: movie.title,\n          sessionTime: movie.sessionTime,\n          image: movie.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Average Rating: \", averageRatings[movie.movie_name].toFixed(1), \" stars\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), getUser() && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLeaveReview(movie.movie_id),\n          children: \"Leave Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), getUser() && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBookTicket(movie),\n          className: \"mx-2\",\n          children: \"Book Tickets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), showReview && /*#__PURE__*/_jsxDEV(Review, {\n      movieTitle: selectedMovie,\n      onClose: handleCloseReview,\n      onSubmitReview: handleSubmitReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpcomingMovies, \"RPIt8n4AYWQ4gwcM7VaJ/Xdjexc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UpcomingMovies;\nexport default UpcomingMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpcomingMovies\");","map":{"version":3,"names":["React","useState","useEffect","MovieItem","movies","getMovieReviews","updateMovieRatings","getLoggedInUserDetails","getUser","getMovies","Review","Carousel","useNavigate","axios","API_HOST","UpcomingMovies","navigate","handleBookTicket","movie","post","movie_id","state","upcomingMovies","setMovies","reviews","setReviews","showReview","setShowReview","selectedMovie","setSelectedMovie","fetchMovieReviews","response","get","console","log","data","error","fetchMovies","handleLeaveReview","movieTitle","userId","handleCloseReview","handleSubmitReview","rating","comments","username","movieReview","review_rating","review_description","averageRatings","reduce","acc","movieRatings","filter","movie_name","length","totalRating","sum","sort","a","b","flex","overflow","map","index","corouselImage","title","sessionTime","image","toFixed"],"sources":["/Users/vishalmahanteshkodagali/Documents/RMIT/Sem 3/Full Stack Development/Assignment/Git_s3895036/loop-web-s3904406/react/user/src/components/UpcomingMovies.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\nimport MovieItem from \"./MovieItem\";\nimport { movies, getMovieReviews, updateMovieRatings,getLoggedInUserDetails, getUser ,getMovies} from \"../data/repository\";\nimport Review from \"./Review\";\nimport {Carousel} from \"react-bootstrap\";\nimport '../Style/UpcomingMovies.css'; \nimport { useNavigate } from \"react-router-dom\"; \nimport axios from \"axios\"; // Import Axios\nconst API_HOST = \"http://localhost:4000/api\";\n\n\n\n\nconst UpcomingMovies = () => {\n\n  const navigate = useNavigate();\n\n  const handleBookTicket = async (movie) => {\n    await axios.post(`${API_HOST}/moviesClickCount/movie/`+movie.movie_id)// Replace with the actual endpoint URL\n    navigate(\"/booking\", { state: { movie } });\n  }\n\n\n  // Hardcoded data for upcoming movies and session times\n  const [upcomingMovies, setMovies] = useState([]);\n  const [reviews, setReviews] = useState([]);\n\n\n  const [showReview, setShowReview] = useState(false);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n\n\n\n   // Function to fetch movie reviews using Axios\n   const fetchMovieReviews = async () => {\n    try {\n      const response = await axios.get(`${API_HOST}/reviews`)// Replace with the actual endpoint URL\n      console.log(response.data);\n      setReviews(response.data); // Assuming the data is in response.data\n    } catch (error) {\n      console.error(\"Error fetching movie reviews:\", error);\n    }\n  };\n\n   // Function to fetch movie reviews using Axios\n   const fetchMovies = async () => {\n    try {\n      const response = await axios.get(`${API_HOST}/movies`)// Replace with the actual endpoint URL\n      console.log(response.data);\n      setMovies(response.data); // Assuming the data is in response.data\n    } catch (error) {\n      console.error(\"Error fetching movie reviews:\", error);\n    }\n  };\n\n  // Fetch movie reviews when the component mounts\n  useEffect(() => {\n    fetchMovies();\n    fetchMovieReviews();\n\n  }, []);\n\n\n  \n\n  const handleLeaveReview = (movieTitle) => {\n    const userId = getUser.userId; \n    \n \n    setSelectedMovie(movieTitle);\n    setShowReview(true);\n  };\n\n  const handleCloseReview = () => {\n    setShowReview(false);\n    setSelectedMovie(null);\n  };\n\n  const handleSubmitReview = async (movieTitle, rating, comments) => {\n\n  // Store the updated review count in local storage\n  const username = getUser();\n    // Save the review data to a localStorage.\n    const movieReview = {\n      movie_id: movieTitle,\n      review_rating: rating,\n      review_description: comments,\n      username: username,\n    };\n    updateMovieRatings(movieReview);\n    await fetchMovies();\n    await fetchMovieReviews();  \n  };\n\n  // Calculate average rating for each movie\n  const averageRatings = upcomingMovies.reduce((acc, movie) => {\n    const movieRatings = reviews.filter((rating) => rating.movie.movie_name === movie.movie_name);\n    if (movieRatings.length > 0) {\n      const totalRating = movieRatings.reduce((sum, rating) => sum + rating.review_rating, 0);\n      acc[movie.movie_name] = totalRating / movieRatings.length;\n    } else {\n      acc[movie.movie_name] = 0;\n    }\n    return acc;\n  }, {});\n\n  // Sort movies based on average ratings (from highest to lowest)\n  upcomingMovies.sort((a, b) => averageRatings[b.movie_name] - averageRatings[a.movie_name]);\n\n  return (\n    <div className=\"upcoming-movies\" style={{ flex: 1, overflow: 'auto' }}>\n      <Carousel>\n        {upcomingMovies.map((movie, index) => (\n          <Carousel.Item key={index}>\n            <img src={movie.corouselImage} alt={movie.title} />\n            <Carousel.Caption>\n              <h4>{movie.movie_name}</h4>\n              <h5>{movie.sessionTime}</h5>\n            </Carousel.Caption>\n          </Carousel.Item>\n        ))}\n      </Carousel>\n      <ul>\n        {upcomingMovies.map((movie, index) => (\n          <li key={index}>\n            <MovieItem title={movie.title} sessionTime={movie.sessionTime} image ={movie.image} />\n            <p>Average Rating: {averageRatings[movie.movie_name].toFixed(1)} stars</p>\n            {getUser() &&  (\n              <button onClick={() => handleLeaveReview(movie.movie_id)}>\n              Leave Review\n            </button>\n            )}\n            {getUser() &&   (\n            <button onClick={() => handleBookTicket(movie)} className=\"mx-2\">Book Tickets</button>\n            )}\n          </li>\n        ))}\n      </ul>\n      {showReview && (\n        <Review\n          movieTitle={selectedMovie}\n          onClose={handleCloseReview}\n          onSubmitReview={handleSubmitReview}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UpcomingMovies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}